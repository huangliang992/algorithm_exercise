package strings;

import java.util.ArrayList;

public class ×Ö·û´®°´×ÖµäÅÅĞò {
	
	public static void main(String args[]){
		×Ö·û´®°´×ÖµäÅÅĞò a = new ×Ö·û´®°´×ÖµäÅÅĞò();
		ArrayList<String> list = a.Permutation("adabc");
		for(int i=0;i<list.size();i++){
			System.out.println(list.get(i));
		}
	}
	
	public ArrayList<String> Permutation(String str) {
	       int[] used = new int[str.length()];
	       for(int i=0;i<used.length;i++){
	    	   used[i] = 0;
	       }
	       ArrayList<String> al = new ArrayList<String>();
	       StringBuilder sb = new StringBuilder();
	       char[] cr = sort(str).toCharArray();
	       backtrace(al,cr, str.length(), used, sb);
	       return al;
    }
	
	/**
	 * Œ¦×Ö·û´®ÅÅĞò
	 * @param str
	 * @return
	 */
	public String sort(String str){
		char[] c = str.toCharArray();
		for(int i=0;i<c.length;i++){
			for(int j=i+1;j<c.length;j++){
				char temp = c[i];
				if(c[j]<temp){
					c[i] = c[j];
					c[j] = temp;
				}
			}
		}
		StringBuilder sb = new StringBuilder();
		for(int i=0;i<c.length;i++){
			sb.append(c[i]);
		}
		return sb.toString();
	}
	
	public void backtrace(ArrayList<String> list, char[] str, int t, int[] used, StringBuilder sb){
		if(t>0){
			for(int i=0;i<str.length;i++){
				//ÅĞ”àÔ“×Ö·û¿É·ñÊ¹ÓÃ
				if(used[i]!=1){//¿ÉÒÔÊ¹ÓÃ
					sb.append(str[i]);
					used[i] = 1;
					backtrace(list, str, t-1, used, sb);
					used[i]=0;
					sb.deleteCharAt(t);
				}
			}
		}else{
			list.add(sb.toString());
		}
	}
}
