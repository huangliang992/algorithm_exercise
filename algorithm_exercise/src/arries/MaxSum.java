package arries;

public class MaxSum {
	public int getMaxSum(int[] A, int n) {
        // write code here
		int a[]=new int [A.length];
		for(int i=A.length-1;i>=0;i--){
			int max=A[i];
			a[i]=A[i];
			for(int j=i+1;j<A.length;j++){
				max=max+A[j];
				if(max+A[j]>a[i]){
					a[i]=max;
				}
			}
		}
		int max=a[0];
		for(int i=0;i<a.length;i++){
			//System.out.println(a[i]);
			if(a[i]>max){
				max=a[i];
				
			}
		}
		return max;
    }
	
	public int getMaxSum1(int[] A, int n) {
        // write code here
        int [] bf=new int [n];
        bf[0]=A[0];
        for(int i=1;i<n;i++){       
            bf[i]=A[i];
            bf[i]=Math.max(bf[i-1]+A[i],bf[i]);            
        }
        int temp=A[0];
        for(int i=0;i<n;i++){
            if(bf[i]>temp){
                temp=bf[i];
            }
        }
        return temp;
    }
	
	public static void main(String args[]){
		MaxSum m=new MaxSum();
		int A[]={
		};
		System.out.println(m.getMaxSum(A, 241));
		System.out.println(m.getMaxSum1(A, 241));
		
	}
}
